datasources:
 datasources.yaml:
   apiVersion: 1
   datasources:
    - name: Tempo
      type: tempo
      access: browser
      basicAuth: false
      orgId: 1
      uid: tempo
      url: http://tempo.observability.svc:3100
      isDefault: true
      editable: true
      jsonData:
        tracesToLogsV2:
          # Field with an internal link pointing to a logs data source in Grafana.
          # datasourceUid value must match the uid value of the logs data source.
          datasourceUid: 'Loki'
          spanStartTimeShift: '-1h'
          spanEndTimeShift: '1m'
          tags: ['instance', 'namespace']
          filterByTraceID: false
          filterBySpanID: false
          customQuery: true
          query: '{exporter="OTLP"} | json | instance="$${__span.tags.instance}"'
        # tracesToMetrics:
        #   datasourceUid: 'prom'
        #   spanStartTimeShift: '1h'
        #   spanEndTimeShift: '-1h'
        #   tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        #   queries:
        #     - name: 'Sample query'
        #       query: 'sum(rate(traces_spanmetrics_latency_bucket{$__tags}[5m]))'
        # serviceMap:
        #   datasourceUid: 'prometheus'
        # nodeGraph:
        #   enabled: true
        # search:
        #   hide: false
        # lokiSearch:
        #   datasourceUid: 'loki'
        # traceQuery:
        #   timeShiftEnabled: true
        #   spanStartTimeShift: '1h'
        #   spanEndTimeShift: '-1h'
        # spanBar:
        #   type: 'Tag'
        #   tag: 'http.path'

    - orgId: 1
      name: Loki
      type: loki
      typeName: Loki
      typeLogoUrl: public/app/plugins/datasource/loki/img/loki_icon.svg
      access: browser
      url: http://loki.observability.svc:3100
      basicAuth: false
      isDefault: false
      jsonData:
        derivedFields:
          - datasourceUid: Tempo
            matcherRegex: '"traceparent":"[\d]{2}-([\da-f]{32})-[\da-f]{16}-[\da]{2}"'
            name: TraceID
            url: "$${__value.raw}"
      readOnly: true
dashboardProviders:
 dashboardproviders.yaml:
   apiVersion: 1
   providers:
   - name: 'default'
     orgId: 1
     folder: ''
     type: file
     disableDeletion: false
     editable: true
     options:
       path: /var/lib/grafana/dashboards/default
dashboardsConfigMaps:
 default: "debug-apps-dashboard"
env:
 JAEGER_AGENT_PORT: 6831

adminUser: admin
adminPassword: password

service:
 type: LoadBalancer
