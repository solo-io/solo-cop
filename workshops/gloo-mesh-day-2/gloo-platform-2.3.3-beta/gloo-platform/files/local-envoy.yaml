# Required comment so SKv2-rendered config map works properly. First line is extra indented, so need to be a comment.
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8090
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                route_config:
                  name: gloo-mesh
                  virtual_hosts:
                    - name: gloo-mesh
                      domains: ["*"]
                      typed_per_filter_config:
                        envoy.filters.http.ext_authz:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                          check_settings:
                            context_extensions:
                              # The server uses this to determine which AuthService to use to authorize requests
                              config_id: gloo-mesh-settings
                      routes:
                        # gRPC requests go to the API
                        - match:
                            prefix: "/"
                            headers:
                              - name: content-type
                                prefix_match: application/grpc
                          route:
                            cluster: gloo-mesh-apiserver
                            timeout: 60s
                        # Disable auth for the welcome screen and required static assets
                        - match:
                            safe_regex:
                              google_re2: { }
                              regex: "\/static\/.*|\/welcome|\/service-worker.js\/.*|\/favicon.ico"
                          route:
                            cluster: gloo-mesh-ui
                            timeout: 15s
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        # All other requests go to the UI
                        - match:
                            prefix: "/"
                          route:
                            cluster: gloo-mesh-ui
                            timeout: 15s
                      cors:
                        allow_origin_string_match:
                          - safe_regex:
                              google_re2: {}
                              regex: \*
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                        filter_enabled: # the values 100/HUNDRED are the default. Still, we want to explicitly define them until we know that the envoy we are using conforms to the new api
                          default_value:
                            numerator: 100
                            denominator: HUNDRED
                http_filters:
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      grpc_service:
                        envoy_grpc:
                          cluster_name: ext-authz
                        timeout: 0.5s
                      include_peer_certificate: true
                      transport_api_version: V3
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: gloo-mesh-apiserver
      connect_timeout: 15.000s
      type: STATIC
      http2_protocol_options:
        connection_keepalive:
          interval: 30s
          timeout: 5s
      lb_policy: round_robin
      load_assignment:
        cluster_name: gloo-mesh-apiserver
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 10101
    - name: gloo-mesh-ui
      connect_timeout: 15.000s
      type: static
      lb_policy: round_robin
      load_assignment:
        cluster_name: gloo-mesh-ui
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 3000
    - name: ext-authz
      type: STATIC
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          # Explicitly require HTTP/2
          explicit_http_config:
            http2_protocol_options: { }
      load_assignment:
        cluster_name: ext-authz
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8083
        # This timeout controls the initial TCP handshake timeout - not the timeout for the
        # entire request.
      connect_timeout: 0.25s
    - name: admin_port_cluster
      connect_timeout: 15.000s
      type: STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: admin_port_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 19000
admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 19000
