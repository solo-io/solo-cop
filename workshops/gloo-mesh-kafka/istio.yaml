apiVersion: admin.gloo.solo.io/v2
kind: IstioLifecycleManager
metadata:
  name: istiod-control-plane
  namespace: gloo-mesh
spec:
  installations:
      # The revision for this installation, such as 1-14
    - revision: 1-16
      # List all workload clusters to install Istio into
      clusters:
      - name: cluster1
        # If set to true, the spec for this revision is applied in the cluster
        defaultRevision: true
      - name: cluster2
        # If set to true, the spec for this revision is applied in the cluster
        defaultRevision: true
      istioOperatorSpec:
        # Only the control plane components are installed
        # (https://istio.io/latest/docs/setup/additional-setup/config-profiles/)
        profile: minimal
        # Solo.io Istio distribution repository; required for Gloo Istio.
        # You get the repo key from your Solo Account Representative.
        hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
        # Any Solo.io Gloo Istio tag
        tag: 1.16.2-solo
        namespace: istio-system
        # Mesh configuration
        meshConfig:
          enableTracing: true
          extensionProviders:
            - name: zipkincustom
              zipkin:
                service: "gloo-telemetry-collector.gloo-mesh.svc.cluster.local"
                port: "9411"
            - name: envoyOtelAls
              envoyOtelAls:
                service: "gloo-telemetry-collector.gloo-mesh.svc.cluster.local"
          # Enable access logging only if using.
          accessLogFile: /dev/stdout
          # Encoding for the proxy access log (TEXT or JSON). Default value is TEXT.
          accessLogEncoding: JSON
          defaultConfig:
            tracing:
              max_path_tag_length: 256
              custom_tags:
                clusterID:
                  environment:
                    name: ISTIO_META_CLUSTER_ID
            # Wait for the istio-proxy to start before starting application pods
            holdApplicationUntilProxyStarts: true
            proxyMetadata:
              # Enable Istio agent to handle DNS requests for known hosts
              # Unknown hosts are automatically resolved using upstream DNS servers
              # in resolv.conf (for proxy-dns)
              ISTIO_META_DNS_CAPTURE: "true"
              # Enable automatic address allocation (for proxy-dns)
              ISTIO_META_DNS_AUTO_ALLOCATE: "true"
          # Set the default behavior of the sidecar for handling outbound traffic
          # from the application
          outboundTrafficPolicy:
            mode: ALLOW_ANY
          # The administrative root namespace for Istio configuration
          rootNamespace: istio-system
        # Traffic management
        values:
          global:
            meshID: mesh1
            network: "istio-network"
        # Traffic management
        components:
          # Disable gateways deployments, which are deployed in separate resources
          ingressGateways:
          - name: istio-ingressgateway
            enabled: false
          - name: istio-eastwestgateway
            enabled: false
          egressGateways:
          - name: istio-egressgateway
            enabled: false
          pilot:
            k8s:
              env:
                # Disable selecting workload entries for local service routing.
                # Required for Gloo VirtualDestinaton functionality.
                - name: PILOT_ENABLE_K8S_SELECT_WORKLOAD_ENTRIES
                  value: "false"
---
apiVersion: admin.gloo.solo.io/v2
kind: GatewayLifecycleManager
metadata:
  name: istio-ingressgateway
  namespace: gloo-mesh
spec:
  installations:
      # The revision for this installation, such as 1-14
    - gatewayRevision: 1-16
      # List all workload clusters to install Istio into
      clusters:
      - name: cluster1
        # If set to true, the spec for this revision is applied in the cluster
        activeGateway: true
      istioOperatorSpec:
        # No control plane components are installed
        profile: empty
        # Solo.io Istio distribution repository; required for Gloo Istio.
        # You get the repo key from your Solo Account Representative.
        hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
        # The Solo.io Gloo Istio tag
        tag: 1.16.2-solo
        values:
          gateways:
            istio-ingressgateway:
              injectionTemplate: gateway
          global:
            network: istio-network
        components:
          ingressGateways:
          # Enable the default ingress gateway
            - name: istio-ingressgateway
              # Deployed to gloo-mesh-gateways by default
              namespace: istio-ingress
              enabled: true
              label:
                # Set a unique label for the gateway. This is required to
                # ensure Gateways can select this workload
                istio: ingressgateway
                app: istio-ingressgateway
                revision: 1-16
              k8s:
                serviceAnnotations:
                  service.beta.kubernetes.io/aws-load-balancer-type: "external"
                  service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
                  service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
                service:
                  type: LoadBalancer
                  selector:
                    istio: ingressgateway
                  # Default ports
                  ports:
                    # Port for health checks on path /healthz/ready.
                    # For AWS ELBs, this port must be listed first.
                    # - name: status-port
                    #   port: 15021
                    #   targetPort: 15021
                    # Main HTTP ingress port
                    - port: 80
                      targetPort: 8080
                      name: http2
                    # Main HTTPS ingress port
                    - port: 443
                      targetPort: 8443
                      name: https
---
apiVersion: admin.gloo.solo.io/v2
kind: GatewayLifecycleManager
metadata:
  name: istio-eastwestgateway
  namespace: gloo-mesh
spec:
  installations:
      # The revision for this installation, such as 1-14
    - gatewayRevision: 1-16
      # List all workload clusters to install Istio into
      clusters:
      - name: cluster1
        # If set to true, the spec for this revision is applied in the cluster
        activeGateway: true
      - name: cluster2
        activeGateway: true
      istioOperatorSpec:
        # No control plane components are installed
        profile: empty
        # Solo.io Istio distribution repository; required for Gloo Istio.
        # You get the repo key from your Solo Account Representative.
        hub: us-docker.pkg.dev/gloo-mesh/istio-workshops
        # The Solo.io Gloo Istio tag
        tag: 1.16.2-solo
        components:
          ingressGateways:
          # Enable the default east-west gateway
            - name: istio-eastwestgateway
              # Deployed to gloo-mesh-gateways by default
              namespace: istio-eastwest
              enabled: true
              label:
                # Set a unique label for the gateway. This is required to
                # ensure Gateways can select this workload.
                istio: eastwestgateway
                app: istio-eastwestgateway
                revision: 1-16
              k8s:
                serviceAnnotations:
                  service.beta.kubernetes.io/aws-load-balancer-type: "external"
                  service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "instance"
                  service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
                env:
                  # sni-dnat adds the clusters required for AUTO_PASSTHROUGH mode
                  # Required by Gloo for east-west routing
                  - name: ISTIO_META_ROUTER_MODE
                    value: "sni-dnat"
                service:
                  type: LoadBalancer
                  selector:
                    istio: eastwestgateway
                  # Default ports
                  ports:
                    # Port for health checks on path /healthz/ready.
                    # For AWS ELBs, this port must be listed first.
                    # - port: 15021
                    #   targetPort: 15021
                    #   name: status-port
                    # Port for multicluster mTLS passthrough
                    # Required for Gloo east/west routing
                    - port: 15443
                      targetPort: 15443
                      # Gloo looks for this default name 'tls' on a gateway
                      name: tls