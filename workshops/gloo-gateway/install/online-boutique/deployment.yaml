apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: online-boutique
  labels:
    app: frontend
spec:
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend
  namespace: online-boutique
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: view-nodes
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-nodes
subjects:
- kind: ServiceAccount
  name: frontend
  namespace: online-boutique
roleRef:
  kind: ClusterRole
  name: view-nodes
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: online-boutique
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: frontend
      containers:
        - name: server
          image: gcr.io/solo-test-236622/frontend:solo-build
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
                - name: "Cookie"
                  value: "shop_session-id=x-liveness-probe"
          env:
            - name: PORT
              value: "8080"
            - name: AD_SERVICE_ADDR
              value: "adservice.online-boutique.svc.cluster.local:9555"
            - name: CART_SERVICE_ADDR
              value: "cartservice.online-boutique.svc.cluster.local:7070"
            - name: RECOMMENDATION_SERVICE_ADDR
              value: "recommendationservice.online-boutique.svc.cluster.local:8080"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice.online-boutique.svc.cluster.local:50051"
            - name: CHECKOUT_SERVICE_ADDR
              value: "checkoutservice.online-boutique.svc.cluster.local:5050"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice.online-boutique.svc.cluster.local:3550"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice.online-boutique.svc.cluster.local:7000"
            # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem
            # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp 
            - name: ENV_PLATFORM 
              value: "onprem"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_CLUSTER_NAME
              value: cluster1
---
apiVersion: v1
kind: ServiceAccount
metadata: 
  name: loadgenerator
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: loadgenerator
  replicas: 1
  template:
    metadata:
      labels:
        app: loadgenerator
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: loadgenerator
      terminationGracePeriodSeconds: 5
      restartPolicy: Always
      containers:
      - name: main
        image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.3.5
        env:
        - name: FRONTEND_ADDR
          value: "frontend.online-boutique.svc.cluster.local:80"
        - name: USERS
          value: "2"
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
---

apiVersion: v1
kind: Service
metadata:
  name: loadgenerator
  namespace: online-boutique
  labels:
    app: loadgenerator
spec:
  type: ClusterIP
  selector:
    app: loadgenerator
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
###########################################################
## Services
###########################################################
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: online-boutique
  labels:
    app: recommendationservice
spec:
  type: ClusterIP
  selector:
    app: recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
  - name: http
    port: 8085
    targetPort: 8085
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: online-boutique
  labels:
    app: productcatalogservice
spec:
  selector:
    app: productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
  - name: http
    port: 3555
    targetPort: 3555
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: online-boutique
  labels:
    app: emailservice
spec:
  selector:
    app: emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
  - name: http
    port: 5005
    targetPort: 8085
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: online-boutique
  labels:
    app: currencyservice
spec:
  selector:
    app: currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
  - name: http
    port: 7005
    targetPort: 7005
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: online-boutique
  labels:
    app: cartservice
spec:
  selector:
    app: cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: online-boutique
  labels:
    app: adservice
spec:
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  - name: http
    port: 9560
    targetPort: 9560
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: online-boutique
  labels:
    app: shippingservice
spec:
  type: ClusterIP
  selector:
    app: shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  - name: http
    port: 50056
    targetPort: 50056
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: online-boutique
  labels:
    app: paymentservice
spec:
  selector:
    app: paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  - name: http
    port: 50056
    targetPort: 50056
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: online-boutique
  labels:
    app: checkoutservice
spec:
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
  - name: http
    port: 5055
    targetPort: 5055
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: recommendation
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      serviceAccountName: recommendation
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/solo-test-236622/recommendationservice:1.3-http-test
        ports:
        - containerPort: 8080
        - containerPort: 8085
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: HTTP_PORT
          value: "8085"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice.online-boutique.svc.cluster.local:3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: productcatalogservice
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      serviceAccountName: productcatalogservice
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/solo-test-236622/productcatalogservice:1.3-http-test
        ports:
        - containerPort: 3550
        - containerPort: 3555
        env:
        - name: PORT
          value: "3550"
        - name: HTTP_PORT
          value: "3550"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: email
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      serviceAccountName: email
      containers:
      - name: server
        image: gcr.io/solo-test-236622/emailservice:1.3-http-test
        ports:
        - containerPort: 8080
        - containerPort: 8085
        env:
        - name: PORT
          value: "8080"
        - name: HTTP_PORT
          value: "8085"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: currency
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      serviceAccountName: currency
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/solo-test-236622/currencyservice:1.3-http-test
        ports:
        - name: grpc
          containerPort: 7000
        - name: http
          containerPort: 7005
        env:
        - name: PORT
          value: "7000"
        - name: HTTP_PORT
          value: "7005"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cart
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      serviceAccountName: cart
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/solo-test-236622/cartservice:1.3-http-test
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: ""
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ad
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      serviceAccountName: ad
      terminationGracePeriodSeconds: 5
      containers:
        - name: server
          image: gcr.io/solo-test-236622/adservice:1.3-http-test
          ports:
            - containerPort: 9555
            - containerPort: 9560
          env:
            - name: PORT
              value: "9555"
            - name: HTTP_PORT
              value: "9560"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
          livenessProbe:
            initialDelaySeconds: 20
            periodSeconds: 15
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
###########################################################
## Deployments
###########################################################
apiVersion: v1
kind: ServiceAccount
metadata:
  name: shipping
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      serviceAccountName: shipping
      containers:
      - name: server
        image: gcr.io/solo-test-236622/shippingservice:1.3-http-test
        ports:
        - containerPort: 50051
        - containerPort: 50056
        env:
        - name: PORT
          value: "50051"
        - name: HTTP_PORT
          value: "50056"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: payment
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      serviceAccountName: payment
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/solo-test-236622/paymentservice:1.3-http-test
        ports:
        - containerPort: 50051
        - containerPort: 50056
        env:
        - name: PORT
          value: "50051"
        - name: HTTP_PORT
          value: "50056"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
---
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkout
  namespace: online-boutique
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: online-boutique
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      serviceAccountName: checkout
      containers:
        - name: server
          image: gcr.io/solo-test-236622/checkoutservice:1.3-http-test
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5050
            - containerPort: 5055
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
            - name: PORT
              value: "5050"
            - name: HTTP_PORT
              value: "5055"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: "productcatalogservice.online-boutique.svc.cluster.local:3550"
            - name: SHIPPING_SERVICE_ADDR
              value: "shippingservice.online-boutique.svc.cluster.local:50051"
            - name: PAYMENT_SERVICE_ADDR
              value: "paymentservice.online-boutique.svc.cluster.local:50051"
            - name: EMAIL_SERVICE_ADDR
              value: "emailservice.online-boutique.svc.cluster.local:5000"
            - name: CURRENCY_SERVICE_ADDR
              value: "currencyservice.online-boutique.svc.cluster.local:7000"
            - name: CART_SERVICE_ADDR
              value: "cartservice.online-boutique.svc.cluster.local:7070"
            - name: DISABLE_STATS
              value: "1"
            - name: DISABLE_TRACING
              value: "1"
            - name: DISABLE_PROFILER
              value: "1"
            - name: KUBERNETES_CLUSTER_NAME
              value: cluster2
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi